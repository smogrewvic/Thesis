import numpy as np
class Crosswalk_Info:

    trigger_distance = 2.5  # cartesian distance meters
    trigger_overshoot = 0.5  # allowance for pedestrian overshoot

    crosswalk_points = (
        (float('inf'), float('inf'), float('inf')),  # dead crosswalk
        (114.5745, 37.5034, 0.0747),
        (93.0368, 37.2053, 0.0753),
        (87.61, 33.77, 0.0744),
        (87.5412, 7.798, 0.0746),
        (93.9782, 1.9156, 0.0747),
        (113.6656, 2.4627, 0.0696),
        (-31.2088, -73.0982, 0.0745),
        (-31.1552, -53.0939, 0.0745),
        (-36.2962, -47.8941, 0.0745),
        (-57.2684, -48.0077, 0.0745),
        (-62.9522, -53.5295, 0.0748),
        (-62.5808, -72.7679, 0.0698),
        (-118.1935, 3.2633, 0.0744),
        (-97.9403, 3.6736, 0.07),
        (-93.1985, 6.824, 0.0745),
        (-93.2376, 32.643, 0.0697),
        (-98.9409, 39.0151, 0.0746),
        (-118.054, 38.9477, 0.0696),
        (91.2699, 76.3838, 0.0745),
        (91.3251, 61.4082, 0.039),
        (-57.3738, 118.4328, 0.0745),
        (-37.269, 118.455, 0.0697),
        (-30.7987, 61.9088, 0.0697),
        (-31.3607, 74.9158, 0.0745),
        (33.9564, 58.5946, 0.0745),
        (51.8935, 58.5987, 0.113),
        (33.0279, 35.1987, 0.0745),
        (52.0323, 34.8983, 0.1041),
        (-35.9596, 36.4152, 0.0745),
        (-57.1675, 36.4331, 0.0697),
        (-57.1587, 2.8995, 0.0699),
        (-36.7187, 2.9776, 0.0745),
    )
    numpy_crosswalk_points = np.array(crosswalk_points)

    crosswalk_attitudes = (
        (float('inf'),float('inf'),float('inf'), 0, 0, 0),  # dead crosswalk
        (114.5745, 37.5034, 0.0747, -3.1931, 0.0044, -178.7706),
        (93.0368, 37.2053, 0.0753, -3.179, 0.079, 0.3092),
        (87.61, 33.77, 0.0744, -3.1053, 0.0008, -88.462),
        (87.5412, 7.798, 0.0746, -3.1512, 0.0046, 90.2114),
        (93.9782, 1.9156, 0.0747, -3.1984, -0.0645, 1.3828),
        (113.6656, 2.4627, 0.0696, 3.1141, -0.0003, -178),
        (-31.2088, -73.0982, 0.0745, -3.1137, -0.0007, 89.4793),
        (-31.1552, -53.0939, 0.0745, -3.1219, -0.0001, -90.1967),
        (-36.2962, -47.8941, 0.0745, -3.1207, -0.0002, -179.5769),
        (-57.2684, -48.0077, 0.0745, -3.1129, 0, 0.0582),
        (-62.9522, -53.5295, 0.0748, -3.1845, -0.0181, -90.2536),
        (-62.5808, -72.7679, 0.0698, 3.0647, -0.0033, 90),
        (-118.1935, 3.2633, 0.0744, -3.1161, 0.0003, 1.5095),
        (-97.9403, 3.6736, 0.07, 2.9872, 0.014, 180),
        (-93.1985, 6.824, 0.0745, -3.1208, -0.0002, 89.4001),
        (-93.2376, 32.643, 0.0697, 3.0765, 0.0019, 90.5397),
        (-98.9409, 39.0151, 0.0746, -3.1532, -0.0016, 179.0528),
        (-118.054, 38.9477, 0.0696, 3.1118, 0.0001, 0),
        (91.2699, 76.3838, 0.0745, -3.1179, -0.0003, -89.466),
        (91.3251, 61.4082, 0.039, 1.5578, 3.2512, 90),
        (-57.3738, 118.4328, 0.0745, -3.1045, 0.0083, 1.7351),
        (-37.269, 118.455, 0.0697, 3.087, 0.0016, 180),
        (-30.7987, 61.9088, 0.0697, 3.1289, -0.0196, 90),
        (-31.3607, 74.9158, 0.0745, -3.1153, -0.0004, -90),
        (33.9564, 58.5946, 0.0745, -3.112, 0, -0.3158),
        (51.8935, 58.5987, 0.113, 1.633, 2.5403, 180),
        (33.0279, 35.1987, 0.0745, -3.1188, -0.0005, -2.2486),
        (52.0323, 34.8983, 0.1041, -1.6271, 3.1266, 179.234),
        (-35.9596, 36.4152, 0.0745, -3.1275, -0.0011, 179.7239),
        (-57.1675, 36.4331, 0.0697, 3.0726, 0.0018, 0),
        (-57.1587, 2.8995, 0.0699, 3.015, -0.0022, 0),
        (-36.7187, 2.9776, 0.0745, -3.1129, 0, -178.9324),
    )

    crosswalk_pairs = {
        (float('inf'),float('inf'),float('inf')):(float('inf'),float('inf'),float('inf')),  # dead crosswalk
        (114.5745, 37.5034, 0.0747): (93.0368, 37.2053, 0.0753),
        (87.61, 33.77, 0.0744): (87.5412, 7.798, 0.0746),
        (93.9782, 1.9156, 0.0747): (113.6656, 2.4627, 0.0696),
        (-31.2088, -73.0982, 0.0745): (-31.1552, -53.0939, 0.0745),
        (-36.2962, -47.8941, 0.0745): (-57.2684, -48.0077, 0.0745),
        (-62.9522, -53.5295, 0.0748): (-62.5808, -72.7679, 0.0698),
        (-118.1935, 3.2633, 0.0744): (-97.9403, 3.6736, 0.07),
        (-93.1985, 6.824, 0.0745): (-93.2376, 32.643, 0.0697),
        (-98.9409, 39.0151, 0.0746): (-118.054, 38.9477, 0.0696),
        (91.2699, 76.3838, 0.0745): (91.3251, 61.4082, 0.039),
        (-57.3738, 118.4328, 0.0745): (-37.269, 118.455, 0.0697),
        (-30.7987, 61.9088, 0.0697): (-31.3607, 74.9158, 0.0745),
        (33.9564, 58.5946, 0.0745): (51.8935, 58.5987, 0.113),
        (33.0279, 35.1987, 0.0745): (52.0323, 34.8983, 0.1041),
        (-35.9596, 36.4152, 0.0745): (-57.1675, 36.4331, 0.0697),
        (-57.1587, 2.8995, 0.0699): (-36.7187, 2.9776, 0.0745),
        (93.0368, 37.2053, 0.0753): (114.5745, 37.5034, 0.0747),
        (87.5412, 7.798, 0.0746): (87.61, 33.77, 0.0744),
        (113.6656, 2.4627, 0.0696): (93.9782, 1.9156, 0.0747),
        (-31.1552, -53.0939, 0.0745): (-31.2088, -73.0982, 0.0745),
        (-57.2684, -48.0077, 0.0745): (-36.2962, -47.8941, 0.0745),
        (-62.5808, -72.7679, 0.0698): (-62.9522, -53.5295, 0.0748),
        (-97.9403, 3.6736, 0.07): (-118.1935, 3.2633, 0.0744),
        (-93.2376, 32.643, 0.0697): (-93.1985, 6.824, 0.0745),
        (-118.054, 38.9477, 0.0696): (-98.9409, 39.0151, 0.0746),
        (91.3251, 61.4082, 0.039): (91.2699, 76.3838, 0.0745),
        (-37.269, 118.455, 0.0697): (-57.3738, 118.4328, 0.0745),
        (-31.3607, 74.9158, 0.0745): (-30.7987, 61.9088, 0.0697),
        (51.8935, 58.5987, 0.113): (33.9564, 58.5946, 0.0745),
        (52.0323, 34.8983, 0.1041): (33.0279, 35.1987, 0.0745),
        (-57.1675, 36.4331, 0.0697): (-35.9596, 36.4152, 0.0745),
        (-36.7187, 2.9776, 0.0745): (-57.1587, 2.8995, 0.0699),
    }
